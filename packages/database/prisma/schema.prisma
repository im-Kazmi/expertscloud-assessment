datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

model User {
  clerkId         String        @id
  name            String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  email           String        @unique
  avatarUrl       String?
  blockedAt       DateTime?
  meta            Json          @default("{}")
  profileSettings Json          @default("{}")
  featureSettings Json          @default("{}")
  Organization    Organization? @relation(fields: [organizationId], references: [id])
  organizationId  String?
  tasks           Task[]
}

model Organization {
  id                      String   @id
  name                    String
  imgUrl                  String?
  slug                    String?
  membersCount            Int?
  pendingInvitationsCount Int?
  adminDeleteEnabled      Boolean?
  maxAllowedMemberships   Int?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  publicMetadata          Json     @default("{}")

  users User[]
  Task  Task[]
}

enum TastStats {
  TODO
  COMPLETED
  IN_PROGRESS
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  status      TastStats @default(TODO)
  priority    Priority  @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  orgId String
  org   Organization @relation(fields: [orgId], references: [id])

  assigneeId String?
  assignee   User?   @relation(fields: [assigneeId], references: [clerkId])

  @@map("tasks")
}
